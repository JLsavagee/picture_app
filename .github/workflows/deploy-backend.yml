name: Deploy Backend to AWS EC2

on:
  push:
    branches:
      - main  # Triggers on pushes to the 'main' branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the latest code
      - name: Checkout Code
        uses: actions/checkout@v2

      # Step 2: Set up SSH key (Decode the base64 key and set the right permissions)
      - name: Setup SSH Key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" | base64 --decode > /tmp/key.pem
          chmod 600 /tmp/key.pem

      # Step 3: Add EC2 Host Key to known_hosts
      - name: Add EC2 Host Key to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H 13.60.237.14 >> ~/.ssh/known_hosts

      # Step 4: Copy Backend and requirements.txt to EC2
      - name: Copy Backend to EC2
        run: |
          scp -i /tmp/key.pem -r ./backend ubuntu@13.60.237.14:/home/ubuntu/TC-Editor-Backend/
          scp -i /tmp/key.pem ./requirements.txt ubuntu@13.60.237.14:/home/ubuntu/TC-Editor-Backend/
      

      # Step 5: SSH into EC2, set up environment, and restart the service
      - name: Deploy to AWS EC2
        run: |
          ssh -i /tmp/key.pem ubuntu@13.60.237.14 << 'EOF'
            # Navigate to the TC-Editor-Backend directory
            cd ~/TC-Editor-Backend

            # Ensure virtual environment exists
            if [ ! -d "../venv" ]; then
              python3.11 -m venv ../venv
            fi

            # Activate the virtual environment
            source ../venv/bin/activate

            # Install Python dependencies
            pip install -r requirements.txt

            # Ensure PM2 is installed and in PATH
            export PATH="$PATH:$HOME/.local/bin"
            if ! command -v pm2 &> /dev/null; then
              sudo npm install -g pm2
            fi

            # Restart the application using PM2 and the ecosystem file
            pm2 startOrReload ecosystem.config.js
          EOF

